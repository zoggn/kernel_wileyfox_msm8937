  #define E_N 100//41
	static int ilitek_model_number=52;//48;
	//char e_str[E_N] = {'c','c','c','e','e','e','m','m','m','m','m','m','w','w','w','w','o','o','o','o','o','o','o','o','o'};
	//char e_str[E_N] = {'c','c','c','e','e','e','m','m','m','m','m','m','w','w','w','w','o','o','o','o','o','o','o','o','o'};
	static char ilitek_e_str[E_N] =
	{
		'c','c','c','c','e','e','e','e','m','m','m','m','w','w','w','o','o','o','o','o','o','^','^','^','^','^','^','v','v','v','v','v','v','<','<','<','<','<','<','>','>','>','>','>','>','z','z','z','s','s','s','s',
	};
	static short ilitek_e[E_N*2][16] = {
	//==================c===============================
		{0,-18,-26,-38,-46,-50,-50,-50,-48,-40,-32,-18,-8,0,8,14},	//c1
		{0,0,2,6,16,24,32,42,52,58,62,62,60,58,54,50},	//
		{0,-18,-26,-36,-42,-46,-46,-46,-40,-32,-24,-14,-4,4,12,18},  //c2
		{0,-2,0,8,18,26,34,44,52,56,58,60,60,58,56,56},  //
		{0,-10,-14,-16,-16,-16,-14,-10,-2,6,14,22,30,38,44,46},  //c3
		{0,6,16,24,32,40,48,54,60,62,62,60,58,52,46,42},  //
		{0,-10,-20,-28,-36,-46,-54,-60,-62,-62,-58,-52,-44,-36,-30,-26},  //c4
		{0,-6,-6,-4,-2,4,12,20,28,38,46,50,52,54,56,58},  //
//==================e===============================
		{0,28,38,34,22,10,0,-6,-10,-8,-2,10,22,34,46,54},  //e1
		{0,-14,-24,-34,-36,-32,-24,-12,0,14,24,26,24,22,16,12},  //
		{0,24,34,40,34,22,10,0,-4,-4,0,10,22,36,50,60},  //e2
		{0,-8,-16,-28,-38,-38,-30,-18,-6,6,18,22,24,22,16,16},	//
		{0,14,20,24,22,10,2,-2,0,6,14,24,38,50,56,62},	//e3
		{0,-26,-38,-52,-62,-58,-52,-40,-26,-16,-6,0,-4,-12,-20,-28},  //
		{0,24,38,50,52,40,28,16,4,-6,-8,-4,6,18,28,34},  //e4
		{0,-4,-10,-16,-28,-34,-32,-30,-20,-8,4,16,26,28,26,26},  //
//===================m============================	
		{0,-2,-2,0,8,18,26,28,28,34,42,52,58,60,60,60},  //m1
		{0,42,56,40,20,6,20,44,48,28,10,4,16,36,52,64},  //
		{0,2,0,2,10,24,30,30,28,34,44,56,62,62,62,62},//m2
		{0,40,54,36,16,6,16,36,38,16,-2,2,16,38,52,60},
		{0,2,6,14,20,24,26,26,26,30,36,50,56,60,62,64},//m3
		{0,-28,-46,-54,-46,-28,-14,-16,-36,-50,-62,-58,-46,-30,-16,-8},
		{0,2,4,12,22,26,28,28,28,34,40,52,60,62,62,62},//m4
		{0,-34,-48,-54,-44,-24,-8,-2,-20,-42,-56,-56,-42,-22,-8,0},
//===================w===========================  
		{0,2,4,8,12,18,22,30,34,36,40,44,50,54,58,62},  //w1
		{0,28,46,54,38,18,4,8,26,48,60,56,38,22,6,0},  //
		{0,2,2,10,16,22,26,32,36,40,46,56,60,62,58,56},  //w2
		{0,22,36,40,28,14,2,8,20,36,42,30,18,0,-10,-16},  //
		{0,0,2,10,16,24,28,34,38,42,48,56,60,62,60,60},  //w3
		{0,24,40,50,42,26,16,14,28,42,52,42,24,8,-4,-10},  //
//===================o===========================     	
		{0,-18,-18,-12,0,12,24,38,44,44,38,24,12,0,-10,-14},  //o1
		{0,20,32,46,52,50,46,38,26,14,2,-10,-10,-6,-2,4},  //
		{0,24,32,34,32,24,12,0,-12,-22,-28,-26,-22,-12,0,8},  //o2
		{0,4,14,26,38,48,56,58,52,46,34,22,10,2,-2,-4},  //
		{0,-24,-26,-24,-16,0,12,24,34,36,34,24,12,0,-12,-16},  //o3
		{0,12,28,40,52,56,58,52,40,28,16,2,-4,-4,0,6},	//
		{0,24,36,42,42,36,24,12,0,-14,-20,-18,-18,-10,2,10},  //o4
		{0,-4,2,14,30,42,52,56,54,46,34,22,10,0,-6,-6},  //
		{0,-8,-18,-30,-42,-50,-52,-52,-48,-38,-24,-12,0,6,10,10},  //o5
		{0,-22,-26,-26,-22,-10,2,14,26,34,36,32,24,12,4,-2},  //
		{0,8,18,32,44,54,56,52,48,40,28,16,4,-4,-4,0},	//o6
		{0,-26,-34,-36,-34,-28,-16,-4,8,20,24,26,22,10,-2,-8},	//
//========================== ^=====================================
		{0,-6,-10,-14,-18,-26,-28,-34,-40,-46,-48,-50,-54,-58,-62,-64},////'^'go from  right1
		{0,-14,-22,-28,-38,-46,-52,-58,-64,-60,-54,-48,-38,-28,-20,-16},
		{0,-60,-58,-54,-52,-50,-46,-46,-38,-30,-24,-20,-16,-12,-8,-6},//'^'go from  right2 big
		{0,-12,-20,-28,-38,-48,-54,-60,-64,-58,-50,-42,-32,-22,-14,-8},
		{0,8,16,22,26,28,32,36,42,46,52,58,60,62,64,64},//'^'go from  right3  left shorter
		{0,-6,-12,-20,-26,-34,-42,-50,-58,-62,-64,-58,-50,-44,-38,-34},
		{0,4,8,10,16,8,24,30,38,42,44,48,54,58,62,64},//////////'^'go from  left1
		{0,-14,-22,-34,-42,-48,-56,-64,-60,-50,-44,-36,-28,-18,-12,-6},
		{0,62,58,54,48,42,36,28,22,18,18,16,14,12,10,8},//'^'go from  left2 big
		{0,-24,-32,-40,-48,-54,-60,-64,-62,-56,-50,-44,-34,-28,-22,-18},
		{0,48,62,60,58,50,44,38,28,20,14,6,2,2,0,0},
		{0,36,42,34,26,16,8,2,-6,-12,-16,-16,-10,-2,6,10},//'^'go from  left3  right shorter
		//========================== v=====================================
		{0,-2,-4,-6,-6,-8,-12,-16,-24,-30,-36,-46,-52,-58,-62,-64},//'v'from left 1
		{0,8,20,32,40,48,54,60,62,60,54,44,36,30,24,20},
		{0,-8,-12,-16,-20,-24,-26,-32,-38,-42,-44,-48,-52,-56,-60,-64},//'v'from left 2  big
		{0,12,24,32,40,48,54,58,54,46,36,28,18,8,2,-2},
		{0,-6,-10,-12,-16,-20,-26,-34,-38,-42,-46,-50,-54,-58,-60,-64},//'v'from left 3 left shorter
		{0,8,18,24,28,34,34,24,18,10,4,-4,-12,-18,-24,-28},
		{0,8,12,16,20,24,32,38,42,46,50,52,54,58,62,62},//'v'from right 1
		{0,12,24,34,44,54,58,56,50,40,32,24,16,6,0,-4},
		{0,-62,-58,-54,-50,-46,-42,-34,-28,-24,-20,-16,-14,-10,-8,-6},//'v'from right 2 big
		{0,0,10,18,28,38,46,56,54,46,36,28,20,12,4,-2},
		{0,-60,-54,-50,-44,-42,-38,-36,-32,-26,-22,-16,-12,-8,-4,-4},//'v'from right 3 left shorter
		{0,-16,-10,-2,6,12,18,24,32,38,42,36,30,24,18,14},
		//========================== <=====================================
		{0,-14,-24,-34,-42,-50,-60,-64,-62,-54,-44,-36,-28,-20,-14,-10},//32//'<'from up 1
		{0,-2,2,10,14,22,28,36,44,46,50,52,54,56,62,62},
		{0,-18,-26,-34,-42,-50,-58,-64,-58,-50,-42,-34,-26,-18,-10,-6},//33//'<'from up  2  big
		{0,4,8,12,16,20,24,32,36,40,44,48,50,54,58,64},
		{0,-8,-16,-26,-32,-40,-46,-50,-58,-62,-62,-56,-50,-44,-38,-34},//34//'<'from up 3 down shorter
		{0,4,6,12,16,22,28,32,40,46,52,54,56,58,62,64},
		{0,-10,-18,-26,-36,-44,-52,-58,-56,-48,-40,-30,-22,-12,-4,2},//'<'from down 1
		{0,-10,-16,-20,-26,-32,-36,-44,-50,-54,-56,-58,-62,-64,-64,-64},
		{0,-10,-18,-26,-34,-42,-50,-58,-52,-44,-36,-28,-18,-10,-2,4},//'<'from down 2 big
		{0,-10,-16,-22,-24,-26,-30,-34,-40,-46,-50,-52,-58,-62,-64,-64},
		{0,-10,-18,-24,-28,-32,-28,-22,-14,-8,-2,6,14,22,28,32},//'<'from down 3 down shorter
		{0,-10,-18,-24,-26,-32,-40,-46,-52,-54,-56,-58,-60,-64,-64,-64},
		//========================== >=====================================
		{0,6,18,28,34,40,52,56,48,40,32,24,12,4,-2,-6},//'>'from up 1
		{0,-2,2,6,12,14,18,24,28,34,38,40,48,52,58,60},
		{0,12,22,30,38,44,52,48,40,32,24,14,6,-2,-6,-10},//'>'from up 2  big
		{0,4,8,12,16,22,28,32,36,38,42,46,52,56,62,62},
		{0,12,20,26,34,40,46,42,36,28,16,10,2,-6,-14,-16},//'>'from up 3 up shorter
		{0,4,8,12,14,18,24,28,34,36,42,46,50,54,58,62},
		{0,8,20,28,36,44,52,60,60,52,44,34,26,18,10,6},//'>'from down 1
		{0,-10,-12,-16,-18,-20,-24,-28,-36,-44,-46,-50,-52,-58,-60,-64},
		{0,16,28,36,44,52,60,60,54,48,40,32,24,16,6,0},//'>'from down 2 big
		{0,-6,-8,-10,-12,-16,-20,-28,-36,-40,-44,-48,-52,-56,-60,-64},
		{0,12,24,32,40,46,52,46,40,32,24,16,6,-2,-8,-12},//'>'from down 3 down shorter
		{0,-6,-10,-14,-18,-22,-26,-30,-36,-40,-42,-48,-52,-58,-60,-64},

		{0,16,24,16,8,0,-6,-12,-18,-12,-4,6,16,24,32,46},   //z
		{0,4,12,16,18,24,26,30,38,42,44,46,50,52,56,64},
		{0,16,26,34,30,22,16,6,-2,-6,0,12,22,32,42,58},
		{0,-6,-6,-2,0,6,10,20,30,38,42,44,46,48,52,58},
		{0,16,26,34,36,30,22,14,6,2,8,16,26,34,44,64},
		{0,0,0,2,10,14,16,20,28,36,42,44,44,48,52,64},


		{0,-22,-30,-42,-44,-32,-18,-4,6,14,12,-2,-14,-26,-38,-44},   //s
		{0,-2,0,6,14,20,26,30,34,42,52,58,60,60,60,58},
		{0,-24,-40,-54,-58,-48,-38,-24,-10,0,4,-10,-20,-36,-50,-56},
		{0,-6,-4,0,8,18,22,26,32,38,48,56,56,52,48,46},
		{0,-24,-40,-54,-58,-48,-38,-24,-10,0,4,-10,-20,-36,-50,-56},
		{0,-6,-4,0,8,18,22,26,32,38,48,56,56,52,48,46},
		{0,-32,-14,2,-4,-24,-22,-26,-40,-36,-18,-2,-12,-28,-46,-54},
		{0,10,24,40,54,50,20,-6,6,22,28,40,50,52,44,42},
		
};

/*#ifdef _DOUBLE_CLICK_
int event_spacing=0;

static bool g_gesture_active_flag = false;
//static int  double_click_touch(int x, int y,char finger_state);
//static int  double_click_release(int x, int y,char finger_state);
static int get_time_diff (struct timeval *past_time)
{
    struct  timeval   time_now;
    int diff_milliseconds=0;
	//取得目前時間
    do_gettimeofday(&time_now);
	//算出相差的時間 單位ms
    diff_milliseconds+=(time_now.tv_sec-past_time->tv_sec)*1000;
	
    if(time_now.tv_usec<past_time->tv_usec)
    {
        diff_milliseconds-=1000;
        diff_milliseconds+=(1000*1000+time_now.tv_usec-past_time->tv_usec)/1000;
    }
    else
    {
        diff_milliseconds+=(time_now.tv_usec-past_time->tv_usec)/1000;
    }

    if(diff_milliseconds< (-10000))
        diff_milliseconds=10000;
    return diff_milliseconds;
}
static int  double_click_touch(int x,int y,char finger_state,int i){
	if(i > 0){
		finger_state = 0;
		printk("------------------------i=%d\n",i);
		return finger_state;
	}
		
	if(finger_state==0||finger_state ==5)
	{
	
		finger_state =1;
		last_x =x;
		last_y =y;
		event_spacing =0;
		do_gettimeofday(&last_event_time);
	}
	else if(finger_state == 1)
	{
		event_spacing += get_time_diff(&last_event_time);
		if(event_spacing>800)
		{
			finger_state =4;
		}
	}
	else if(finger_state==2)
	{
		finger_state =3;
		current_x =x;
		current_y =y;
		current_x =0;
		current_y =0;
		event_spacing += get_time_diff(&last_event_time);
		if(event_spacing>1000)
		{
			finger_state =0;
		}
	}
	else if(finger_state==3)
	{
		current_x =x;
		current_y =y;
		event_spacing += get_time_diff(&last_event_time);							   	  
		if(event_spacing>2000)
		{
			finger_state =4;
		}
	}
	//printk("---double_click_touch 1---finger_state=%d-------event_spacing=%d\n",finger_state,event_spacing);
	return finger_state;
}

static int  double_click_release(int x, int y,char finger_state){							
		if(finger_state==1)
		{
			//printk("---double_click_release 1---finger_state=%d-------\n",finger_state);
			finger_state =2;
			event_spacing += get_time_diff(&last_event_time);
			if(event_spacing>875)
			{
				//printk("---double_click_release 2---finger_state=%d-------\n",finger_state);
				finger_state =0;
			}	
		}
		if(finger_state==3)
		{
			
			event_spacing += get_time_diff(&last_event_time);
			//printk("---double_click_release 3---finger_state=%d-------event_spacing=%d\n",finger_state,event_spacing);
			if((event_spacing<2500&&event_spacing>50)&&(ABSSUB(current_x,last_x)<100)&&((ABSSUB(current_y,last_y)<100)))
			{
				//printk("---double_click_release 4---finger_state=%d-------\n",finger_state);
				finger_state =0;

				if(g_gesture_active_flag != true)
				{
					//printk("---double_click_release 5---finger_state=%d-------\n",finger_state);
					g_gesture_active_flag = true;
					printk("current_x=%d,current_y=%d,last_x=%d,last_y=%d\n",current_x,current_y,last_x,last_y);
					printk("double click resume enable\n");
					finger_state = 5;
					return finger_state;
				}

				else
				{
					//printk("---double_click_release 6---finger_state=%d-------\n",finger_state);
					printk("[Bruce][gesture]double click resume disabled\n");
				}
			}
			else
			{
				//printk("---double_click_release 7---finger_state=%d-------\n",finger_state);
				finger_state =0;
			}
		}else if(finger_state==4)
		{
			//printk("---double_click_release 8---finger_state=%d-------\n",finger_state);
			finger_state =0;
		}
		//printk("---double_click_release 9--finger_state=%d-------event_spacing=%d\n",finger_state,event_spacing);
		g_gesture_active_flag = false;
		return finger_state;
}
#endif*/

